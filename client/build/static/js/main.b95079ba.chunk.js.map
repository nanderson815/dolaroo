{"version":3,"sources":["components/Auth/Firebase/FirebaseContext.js","components/Auth/SignOut/SignOut.js","components/Auth/Session/AuthUserContext.js","components/Navigation/Navigation.js","components/Landing/index.js","components/Home/index.js","components/Account/index.js","components/Admin/index.js","components/Auth/SignUp/SignUp.js","components/Auth/SignIn/SignIn.js","components/Auth/PasswordForget/PasswordForget.js","components/App/App.js","components/Auth/Session/withAuthentication.js","components/Auth/Firebase/firebase.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","_ref","type","onClick","doSignOut","AuthUserContext","Navigation","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","navBarClass","scroll","elem","document","querySelector","M","Sidenav","init","edge","inDuration","navigationAuth","react_router_dom","to","SignOut","navigationNonAuth","mobileNavigationAuth","href","mobileNavigationNonAuth","className","id","Session_AuthUserContext","authUser","data-target","Landing","Home","Account","onChange","event","setState","defineProperty","target","name","value","state","firstName","lastName","email","message","_this$state","Admin","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","preventDefault","console","log","doCreateUserWithEmailAndPassword","then","objectSpread","history","push","catch","_this$state2","isInvalid","placeholder","disabled","SignUpLink","SignUpForm","withRouter","SignUpPage","password","SignInFormBase","doSignInWithEmailAndPassword","SignInForm","compose","SignInPage","SignUp_SignUpLink","PasswordForget","withAuthentication","WithAuthentication","_React$Component","inherits","createClass","key","_this2","listener","auth","onAuthStateChanged","Provider","App","components_Navigation_Navigation","react_router","exact","path","component","LandingPage","PasswordForgetPage","HomePage","AccountPage","AdminPage","require","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","process","Firebase","Promise","resolve","reject","createUserWithEmailAndPassword","authData","err","signInWithEmailAndPassword","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","test","stack","Boolean","window","location","hostname","match","ReactDOM","render","Firebase_FirebaseContext","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b95079ba.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\n// HOC - Higher order component to wrap everything to pass firebase app object to anyone who needss\n// Pass all the component props (using ...props) and also add the firebase app to the props that\n// is passsd in from the .Provider\n// the provider for this is in index.js so its passed to everytone below\n// consumer uses => notation to pass in 'value={}' that provider passes\nconst withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\nexport { withFirebase };","import React from 'react';\n\nimport { withFirebase } from '../Firebase/FirebaseContext';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport SignOutButton from '../Auth/SignOut/SignOut';\nimport AuthUserContext from '../Auth/Session/AuthUserContext';\n\nclass Navigation extends React.Component {\n  constructor(props) {\n      super(props);\n\n      this.navBarClass = '';\n\n      if (props.scroll){\n          this.navBarClass = 'transparent z-depth-0';\n      } else {\n          this.navBarClass = 'z-depth-0 blue darken-4'\n      }\n  }\n\n  componentDidMount() {\n    let elem = document.querySelector(\".sidenav\");\n    M.Sidenav.init(elem, {\n        edge: \"left\",\n        inDuration: 250\n    });\n  }\n\n  render() {\n    const navigationAuth = \n      <ul>\n        <li><Link to=\"/\">Landing</Link></li>\n        <li><NavLink to=\"/home\">Home</NavLink></li>\n        <li><NavLink to=\"/account\">Account</NavLink></li>\n        <li><SignOutButton /></li>\n      </ul>\n      ;\n\n    const navigationNonAuth = \n      <ul>\n        <li><Link to=\"/\">Landing</Link></li>\n        <li><NavLink to=\"/signin\">Signin</NavLink></li>\n      </ul>\n    ;\n\n    const mobileNavigationAuth = \n      <ul>\n        <li><a href=\"/\">Landing</a></li>\n        <li><a href=\"/home\">Home</a></li>\n        <li><a href=\"/account\">Account</a></li>\n        <li><SignOutButton /></li>\n      </ul>\n      ;\n\n    const mobileNavigationNonAuth = \n      <ul>\n        <li><a href=\"/\">Landing</a></li>\n        <li><a href=\"/signin\">Signin</a></li>\n      </ul>\n    ;\n\n    // get auth user from react-context firebase\n    // Not the AuthUSerContext Provider passes the authUser\n    // in its value={} paramater (see withAuthentication component in Auth/Session)\n    // ANY COMPONENT that needs authUser info uses consumer this way\n      \n    return (\n      <div>\n        <ul className=\"sidenav\" id=\"mobile-menu\">\n          <AuthUserContext.Consumer>\n            {authUser =>\n              authUser ? mobileNavigationAuth : mobileNavigationNonAuth\n            }\n          </AuthUserContext.Consumer>\n        </ul>\n\n        <div className='navbar-fixed'>\n            <nav className={this.navBarClass}>\n                <div className=\"container nav-wrapper\">\n                    <a href=\"#!\" data-target=\"mobile-menu\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n                    <ul className=\"right hide-on-med-and-down\">\n                      <AuthUserContext.Consumer>\n                        {authUser =>\n                          authUser ? navigationAuth : navigationNonAuth\n                        }\n                      </AuthUserContext.Consumer>\n                    </ul>\n                </div>\n            </nav>\n        </div>\n      </div>\n    );\n  }// render\n} //class\n\nexport default Navigation;","import React from 'react';\n\nclass Landing extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return ( \n            <div>\n                <h1>Landing</h1>\n            </div>  \n        );\n    }\n}\n\nexport default Landing;","import React from 'react';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return ( \n            <div>\n                <h1>Home</h1>\n            </div>  \n        );\n    }\n}\n\nexport default Home;","import React from 'react';\n\nclass Account extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            message: ''\n        };\n    }\n\n    onChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    render() {\n        const {\n            firstName,\n            lastName,\n            email,\n            message,\n        } = this.state;\n\n        const isInvalid =\n            firstName !== \"\" ||\n            lastName === \"\" ||\n            email === \"\" ||\n            message === \"\";\n\n        return ( \n            <div>\n                <h1>Account</h1>\n            </div>  \n        );\n    }\n}\n\nexport default Account;","import React from 'react';\n\nclass Admin extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return ( \n            <div>\n                <h1>Admin</h1>\n            </div>  \n        );\n    }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase/FirebaseContext';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    const { username, email, passwordOne } = this.state;\n    console.log(this.props);\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // clear the userinout fields\n        this.setState({ ...INITIAL_STATE });\n        // redirect home\n        this.props.history.push(\"/home\"); \n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n  </p>\n);\n\n// Instead of using the Firebase Context directly in the SignUpPage,\n//  which doesn’t need to know about the Firebase instance, use the higher-order component \n//  to wrap your SignUpForm. Afterward, the SignUpForm has access to the Firebase instance \n//  via the higher-order component. It’s also possible to use the SignUpForm as standalone without the SignUpPage,\n//  because it is responsible to get the Firebase instance via the higher-order component.\n// withRouter gives the history props for redirect, withFirebase gives firebase props\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp/SignUp';\nimport { withFirebase } from '../Firebase/FirebaseContext';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(\"/home\");\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\n// componse is a way to avoid nesting HOC's\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React from 'react';\n\nclass PasswordForget extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return ( \n            <div>\n                <h1>PasswordForget</h1>\n            </div>  \n        );\n    }\n}\n\nexport default PasswordForget;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\n\nimport Navigation from '../Navigation/Navigation';\nimport LandingPage from '../Landing';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\n// Auth components\nimport SignUpPage from '../Auth/SignUp/SignUp';\nimport SignInPage from '../Auth/SignIn/SignIn';\nimport PasswordForgetPage from '../Auth/PasswordForget/PasswordForget';\n\n// Session/State Info for all components\nimport withAuthentication from '../Auth/Session/withAuthentication';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: null,\n    };\n  }\n\n  render() {\n    return (\n        <Router>\n          <div>\n            <Navigation />\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/signup\" component={SignUpPage} />\n            <Route exact path=\"/signin\" component={SignInPage} />\n            <Route exact path=\"/pw-forget\" component={PasswordForgetPage} />\n            <Route exact path=\"/home\" component={HomePage} />\n            <Route exact path=\"/account\" component={AccountPage} />\n            <Route exact path=\"/admin\" component={AdminPage} />\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default withAuthentication(App);","import React from 'react';\n\nimport AuthUserContext from './AuthUserContext';\nimport { withFirebase } from '../Firebase/FirebaseContext';\n\n// This component WRAPS Firebase and Authentication Context togtehr in \n// a HOC - Higher Order Component.\n// This allows providers to just wrap withAuthentication around a component\n// to get access to the firebase app and the session context info\n// SO BE CLEAR - This HOC is a WRAPPER in A WRAPPER\n// -- i.e. withAuthentication === withFirebase(WithAuthentication)\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                authUser: null,\n            };\n        }\n\n        // NOTE:  This is where the AuthUserContext gets SET\n        // I set it here it can be accessed anywhere below since context shared at top\n        // Also the the the firebase app object is passed from the index.js component\n        // above the app component so it can be used here.  \n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    authUser ? this.setState({ authUser}) : this.setState({authUser: null});\n                },\n            );\n        }\n\n        // This deletes listener to clean things up and prevent mem leaks\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        // Remember - this withAuthentication pattern automatically wraps a compoennt\n        // with the provider show below to keep it out of that component\n        // it provides the state of this a-object to ant consumer\n        // I am not 100% sure its cleaner and easier but I will go with it for now.\n        render() {\n            return ( \n                <AuthUserContext.Provider value = {this.state.authUser} >\n                    <Component {...this.props} /> \n                </AuthUserContext.Provider>\n            );\n        }\n    }\n\n    return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nrequire(\"dotenv\").config();\n\n// For the life of me I cant get REACT (when in client/) to read ENV vars and google isnt helping me ...\n// Firebase Config using react env\n// const config = {\n//   apiKey: process.env.REACT_APP_API_KEY,\n//   authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//   databaseURL: process.env.REACT_APP_DATABASE_URL,\n//   projectId: process.env.REACT_APP_PROJECT_ID,\n//   storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n//   messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n// };\nconst config = {\n  apiKey: \"AIzaSyDCddfdNSdSf19cWK7je91aJtlyh3zBp4Q\",\n  authDomain: \"project3-noahpauljj-fintech2.firebaseapp.com\",\n  databaseURL: \"https://project3-noahpauljj-fintech2.firebaseio.com\",\n  projectId: \"project3-noahpauljj-fintech2\",\n  storageBucket: \"project3-noahpauljj-fintech2.appspot.com\",\n  messagingSenderId: \"87243866145\"\n};\n\nconsole.log(\"fb config\", config);\nconsole.log(\"process.env\", process.env);\nclass Firebase {\n  constructor() {\n    try {\n      firebase.initializeApp(config);\n    } catch (err) {\n      // we skip the \"already exists\" message which is\n      // not an actual error when we're hot-reloading\n      if (!/already exists/.test(err.message)) {\n        console.error('Firebase initialization error', err.stack)\n      }\n    }\n\n    this.auth = firebase.auth();\n  }\n\n  // *** Firebase Auth API ***\n  doCreateUserWithEmailAndPassword = (email, password) => {\n    return new Promise((resolve, reject) => {\n      this.auth.createUserWithEmailAndPassword(email, password).then((authData) => {\n          console.log(\"User created successfully with payload-\", authData);\n          return resolve(authData);\n        }).catch((err) => {\n          console.error(\"User create failed!\", err);\n          return reject(err);\n        }) \n    }); // Promise\n  }\n\n  doSignInWithEmailAndPassword = (email, password) => {\n    return new Promise((resolve, reject) => {\n      this.auth.signInWithEmailAndPassword(email, password).then((authData) => {\n          console.log(\"User logged in successfully with payload-\", authData);\n          return resolve(authData);\n        }).catch((err) => {\n          console.error(\"Login Failed!\", err);\n          return reject(err);\n        }) \n    }); // Promise\n  }\n\n  doSignOut = () => {\n    this.auth.signOut();\n  }\n\n  doPasswordReset = (email) => {\n    return new Promise((resolve, reject) => {\n      this.auth.sendPasswordResetEmail(email).then((authData) => {\n          console.log(\"User email reset sent successfully with payload-\", authData);\n          return resolve(authData);\n        }).catch((err) => {\n          console.error(\"Login Failed!\", err);\n          return reject(err);\n        }) \n    }); // Promise\n  }\n\n  doPasswordUpdate = (password) => {\n    return new Promise((resolve, reject) => {\n      this.auth.currentUser.updatePassword(password).then((authData) => {\n          console.log(\"User email reset sent successfully with payload-\", authData);\n          return resolve(authData);\n        }).catch((err) => {\n          console.error(\"Login Failed!\", err);\n          return reject(err);\n        }) \n    }); // Promise\n  }\n}\n\nexport default Firebase;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport Firebase  from './components/Auth/Firebase/firebase'; // Firebase instance \nimport FirebaseContext from \"./components/Auth/Firebase/FirebaseContext\";\n// Top ensure firebase is only instantiated once\n\nimport * as serviceWorker from './serviceWorker';\n\n// Doing it this way, we can be assured that Firebase is only instantiated once \n// and that it is injected via React’s Context API to React’s component tree. \n// Now, every component that is interested in using Firebase has access to the Firebase instance\n// with a FirebaseContext.Consumer component.  e.g.\n// const SomeComponent = () => (\n//   <FirebaseContext.Consumer>\n//     {firebase => {\n//       return <div>I've access to Firebase and render something.</div>;\n//     }}\n//   </FirebaseContext.Consumer>\n// );\n// export default SomeComponent;\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}